C51 COMPILER V9.52.0.0   OLED                                                              04/10/2024 21:50:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: F:\all_for_51\keil\C51\BIN\C51.EXE oled.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          #include "Oledfont.h"
   4          
   5          
   6          sbit scl = P1^2;
   7          sbit sda = P1^3;
   8          
   9          void IIC_Start()
  10          {
  11   1        scl = 0;
  12   1        sda = 1;
  13   1        scl = 1;
  14   1        _nop_();
  15   1        sda = 0;
  16   1        _nop_();
  17   1      }
  18          
  19          void IIC_Stop()
  20          {
  21   1        scl = 0;
  22   1        sda = 0;
  23   1        scl = 1;
  24   1        _nop_();
  25   1        sda = 1;
  26   1        _nop_();
  27   1      }
  28          
  29          char IIC_ACK()
  30          {
  31   1        char flag;
  32   1        sda = 1;//就在时钟脉冲9期间释放数据线
  33   1        _nop_();
  34   1        scl = 1;
  35   1        _nop_();
  36   1        flag = sda;
  37   1        _nop_();
  38   1        scl = 0;
  39   1        _nop_();
  40   1        
  41   1        return flag;
  42   1      }
  43          
  44          void IIC_Send_Byte(char dataSend)
  45          {
  46   1        int i;
  47   1        
  48   1        for(i = 0;i<8;i++){
  49   2          scl = 0;//scl拉低，让sda做好数据准备
  50   2          sda = dataSend & 0x80;//1000 0000获得dataSend的最高位，给sda
  51   2          _nop_();//发送数据建立时间
  52   2          scl = 1;//scl拉高开始发送
  53   2          _nop_();//数据发送时间
  54   2          scl = 0;//发送完毕拉低
  55   2          _nop_();//
C51 COMPILER V9.52.0.0   OLED                                                              04/10/2024 21:50:00 PAGE 2   

  56   2          dataSend = dataSend << 1;
  57   2        }
  58   1      }
  59          
  60          void Oled_Write_Cmd(char dataCmd)
  61          {
  62   1        //  1. start()
  63   1        IIC_Start();
  64   1        //    
  65   1        //  2. 写入从机地址  b0111 1000 0x78
  66   1        IIC_Send_Byte(0x78);
  67   1        //  3. ACK
  68   1        IIC_ACK();
  69   1        //  4. cotrol byte: (0)(0)000000 写入命令   (0)(1)000000写入数据
  70   1        IIC_Send_Byte(0x00);
  71   1        //  5. ACK
  72   1        IIC_ACK();
  73   1        //6. 写入指令/数据
  74   1        IIC_Send_Byte(dataCmd);
  75   1        //7. ACK
  76   1        IIC_ACK();
  77   1        //8. STOP
  78   1        IIC_Stop();
  79   1      }
  80          
  81          void Oled_Write_Data(char dataData)
  82          {
  83   1        //  1. start()
  84   1        IIC_Start();
  85   1        //    
  86   1        //  2. 写入从机地址  b0111 1000 0x78
  87   1        IIC_Send_Byte(0x78);
  88   1        //  3. ACK
  89   1        IIC_ACK();
  90   1        //  4. cotrol byte: (0)(0)000000 写入命令   (0)(1)000000写入数据
  91   1        IIC_Send_Byte(0x40);
  92   1        //  5. ACK
  93   1        IIC_ACK();
  94   1        ///6. 写入指令/数据
  95   1        IIC_Send_Byte(dataData);
  96   1        //7. ACK
  97   1        IIC_ACK();
  98   1        //8. STOP
  99   1        IIC_Stop();
 100   1      }
 101          
 102          
 103          void Oled_Init(void){
 104   1        Oled_Write_Cmd(0xAE);//--display off
 105   1        Oled_Write_Cmd(0x00);//---set low column address
 106   1        Oled_Write_Cmd(0x10);//---set high column address
 107   1        Oled_Write_Cmd(0x40);//--set start line address  
 108   1        Oled_Write_Cmd(0xB0);//--set page address
 109   1        Oled_Write_Cmd(0x81); // contract control
 110   1        Oled_Write_Cmd(0xFF);//--128   
 111   1        Oled_Write_Cmd(0xA1);//set segment remap 
 112   1        Oled_Write_Cmd(0xA6);//--normal / reverse
 113   1        Oled_Write_Cmd(0xA8);//--set multiplex ratio(1 to 64)
 114   1        Oled_Write_Cmd(0x3F);//--1/32 duty
 115   1        Oled_Write_Cmd(0xC8);//Com scan direction
 116   1        Oled_Write_Cmd(0xD3);//-set display offset
 117   1        Oled_Write_Cmd(0x00);//
C51 COMPILER V9.52.0.0   OLED                                                              04/10/2024 21:50:00 PAGE 3   

 118   1        
 119   1        Oled_Write_Cmd(0xD5);//set osc division
 120   1        Oled_Write_Cmd(0x80);//
 121   1        
 122   1        Oled_Write_Cmd(0xD8);//set area color mode off
 123   1        Oled_Write_Cmd(0x05);//
 124   1        
 125   1        Oled_Write_Cmd(0xD9);//Set Pre-Charge Period
 126   1        Oled_Write_Cmd(0xF1);//
 127   1        
 128   1        Oled_Write_Cmd(0xDA);//set com pin configuartion
 129   1        Oled_Write_Cmd(0x12);//
 130   1        
 131   1        Oled_Write_Cmd(0xDB);//set Vcomh
 132   1        Oled_Write_Cmd(0x30);//
 133   1        
 134   1        Oled_Write_Cmd(0x8D);//set charge pump enable
 135   1        Oled_Write_Cmd(0x14);//
 136   1        
 137   1        Oled_Write_Cmd(0xAF);//--turn on oled panel   
 138   1      }
 139          
 140          void Oled_Clear()
 141          {
 142   1        unsigned char i,j; //-128 --- 127
 143   1        
 144   1        for(i=0;i<8;i++){
 145   2          Oled_Write_Cmd(0xB0 + i);//page0--page7
 146   2          //每个page从0列
 147   2          Oled_Write_Cmd(0x00);
 148   2          Oled_Write_Cmd(0x10);
 149   2          //0到127列，依次写入0，每写入数据，列地址自动偏移
 150   2          for(j = 0;j<128;j++){
 151   3            Oled_Write_Data(0);
 152   3          }
 153   2        }
 154   1      }
 155          
 156          void Oled_Show_Char(char row,char col,char oledChar){ //row*2-2
 157   1        unsigned int  i;
 158   1        Oled_Write_Cmd(0xb0+(row*2-2));                           //page 0
 159   1        Oled_Write_Cmd(0x00+(col&0x0f));                          //low
 160   1        Oled_Write_Cmd(0x10+(col>>4));                            //high  
 161   1        for(i=((oledChar-32)*16);i<((oledChar-32)*16+8);i++){
 162   2          Oled_Write_Data(F8X16[i]);                            //写数据oledTable1
 163   2        }
 164   1      
 165   1        Oled_Write_Cmd(0xb0+(row*2-1));                           //page 1
 166   1        Oled_Write_Cmd(0x00+(col&0x0f));                          //low
 167   1        Oled_Write_Cmd(0x10+(col>>4));                            //high
 168   1        for(i=((oledChar-32)*16+8);i<((oledChar-32)*16+8+8);i++){
 169   2          Oled_Write_Data(F8X16[i]);                            //写数据oledTable1
 170   2        }   
 171   1      }
 172          
 173          
 174          /******************************************************************************/
 175          // 函数名称：Oled_Show_Char 
 176          // 输入参数：oledChar 
 177          // 输出参数：无 
 178          // 函数功能：OLED显示单个字符
 179          /******************************************************************************/
C51 COMPILER V9.52.0.0   OLED                                                              04/10/2024 21:50:00 PAGE 4   

 180          void Oled_Show_Str(char row,char col,char *str){
 181   1        while(*str!=0){
 182   2          Oled_Show_Char(row,col,*str);
 183   2          str++;
 184   2          col += 8; 
 185   2        }   
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    559    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
